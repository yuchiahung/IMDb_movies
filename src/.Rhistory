mixed_data
class(mixed_data)
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
# Should print out something like:
#>          id    forum gender              title                  content
#> 1 232519207   makeup      F             皮膚細...    每次上網看人家形容...
#> 2 232518995   makeup      F       終於考完期中...      對於愛看棒球的我...
#> 3 232518833   makeup      F        分享 韓國輸...    這篇跟上一篇的溫柔...
#> 4 232517835 freshman      F   急！《彩      式...    大家好～\n因為比賽...
#> 5 232516213 freshman      M    成大是ㄅ是都4廢...       如T\n開戰阿\n窩...
#> 6 232515512 freshman      M     我要想過泓光跟...      除了分數比較差異...
mixed_data
class(mixed_data)
View(mixed_data)
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman")
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
# Should print out something like:
#>          id    forum gender              title                  content
#> 1 232519207   makeup      F             皮膚細...    每次上網看人家形容...
#> 2 232518995   makeup      F       終於考完期中...      對於愛看棒球的我...
#> 3 232518833   makeup      F        分享 韓國輸...    這篇跟上一篇的溫柔...
#> 4 232517835 freshman      F   急！《彩      式...    大家好～\n因為比賽...
#> 5 232516213 freshman      M    成大是ㄅ是都4廢...       如T\n開戰阿\n窩...
#> 6 232515512 freshman      M     我要想過泓光跟...      除了分數比較差異...
View(makeup_data_1)
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman")
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
# Should print out something like:
#>          id    forum gender              title                  content
#> 1 232519207   makeup      F             皮膚細...    每次上網看人家形容...
#> 2 232518995   makeup      F       終於考完期中...      對於愛看棒球的我...
#> 3 232518833   makeup      F        分享 韓國輸...    這篇跟上一篇的溫柔...
#> 4 232517835 freshman      F   急！《彩      式...    大家好～\n因為比賽...
#> 5 232516213 freshman      M    成大是ㄅ是都4廢...       如T\n開戰阿\n窩...
#> 6 232515512 freshman      M     我要想過泓光跟...      除了分數比較差異...
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman") %>%
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
# Should print out something like:
#>          id    forum gender              title                  content
#> 1 232519207   makeup      F             皮膚細...    每次上網看人家形容...
#> 2 232518995   makeup      F       終於考完期中...      對於愛看棒球的我...
#> 3 232518833   makeup      F        分享 韓國輸...    這篇跟上一篇的溫柔...
#> 4 232517835 freshman      F   急！《彩      式...    大家好～\n因為比賽...
#> 5 232516213 freshman      M    成大是ㄅ是都4廢...       如T\n開戰阿\n窩...
#> 6 232515512 freshman      M     我要想過泓光跟...      除了分數比較差異...
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman") %>%
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
summarise(mixed_data)
# Should print out something like:
#>          id    forum gender              title                  content
#> 1 232519207   makeup      F             皮膚細...    每次上網看人家形容...
#> 2 232518995   makeup      F       終於考完期中...      對於愛看棒球的我...
#> 3 232518833   makeup      F        分享 韓國輸...    這篇跟上一篇的溫柔...
#> 4 232517835 freshman      F   急！《彩      式...    大家好～\n因為比賽...
#> 5 232516213 freshman      M    成大是ㄅ是都4廢...       如T\n開戰阿\n窩...
#> 6 232515512 freshman      M     我要想過泓光跟...      除了分數比較差異...
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman") %>%
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
summarize(mixed_data, content = excerpt)
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman") %>%
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
mixed_data %>% summarize_all()
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman") %>%
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
summarize_all(mixed_data)
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman") %>%
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
summarize(mixed_data)
# Should print out something like:
#>          id    forum gender              title                  content
#> 1 232519207   makeup      F             皮膚細...    每次上網看人家形容...
#> 2 232518995   makeup      F       終於考完期中...      對於愛看棒球的我...
#> 3 232518833   makeup      F        分享 韓國輸...    這篇跟上一篇的溫柔...
#> 4 232517835 freshman      F   急！《彩      式...    大家好～\n因為比賽...
#> 5 232516213 freshman      M    成大是ㄅ是都4廢...       如T\n開戰阿\n窩...
#> 6 232515512 freshman      M     我要想過泓光跟...      除了分數比較差異...
summarize(makeup_data_1)
summarise(makeup_data)
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman") %>%
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
mixed_data
# Should print out something like:
#>          id    forum gender              title                  content
#> 1 232519207   makeup      F             皮膚細...    每次上網看人家形容...
#> 2 232518995   makeup      F       終於考完期中...      對於愛看棒球的我...
#> 3 232518833   makeup      F        分享 韓國輸...    這篇跟上一篇的溫柔...
#> 4 232517835 freshman      F   急！《彩      式...    大家好～\n因為比賽...
#> 5 232516213 freshman      M    成大是ㄅ是都4廢...       如T\n開戰阿\n窩...
#> 6 232515512 freshman      M     我要想過泓光跟...      除了分數比較差異...
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman") %>%
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
mixed_data %>%
select(excerpt) %>%
rename(content = excerpt)
# Should print out something like:
#>          id    forum gender              title                  content
#> 1 232519207   makeup      F             皮膚細...    每次上網看人家形容...
#> 2 232518995   makeup      F       終於考完期中...      對於愛看棒球的我...
#> 3 232518833   makeup      F        分享 韓國輸...    這篇跟上一篇的溫柔...
#> 4 232517835 freshman      F   急！《彩      式...    大家好～\n因為比賽...
#> 5 232516213 freshman      M    成大是ㄅ是都4廢...       如T\n開戰阿\n窩...
#> 6 232515512 freshman      M     我要想過泓光跟...      除了分數比較差異...
# Your code goes here
makeup_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/makeup/posts'), "text"))
freshman_data <- fromJSON(content(GET('https://www.dcard.tw/_api/forums/freshman/posts'), "text"))
makeup_data_1 <- makeup_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "makeup") %>%
head(3)
freshman_data_1 <- freshman_data %>%
select(id, title, excerpt, gender) %>%
mutate(forum = "freshman") %>%
head(3)
mixed_data <- rbind(makeup_data_1, freshman_data_1)
mixed_data %>%
rename(content = excerpt)
# Should print out something like:
#>          id    forum gender              title                  content
#> 1 232519207   makeup      F             皮膚細...    每次上網看人家形容...
#> 2 232518995   makeup      F       終於考完期中...      對於愛看棒球的我...
#> 3 232518833   makeup      F        分享 韓國輸...    這篇跟上一篇的溫柔...
#> 4 232517835 freshman      F   急！《彩      式...    大家好～\n因為比賽...
#> 5 232516213 freshman      M    成大是ㄅ是都4廢...       如T\n開戰阿\n窩...
#> 6 232515512 freshman      M     我要想過泓光跟...      除了分數比較差異...
Sys.setlocale(category = "LC_ALL", locale = "en_US.UTF-8")
Sys.getlocale()
knitr::opts_chunk$set(echo = TRUE, comment = '#>', error=TRUE, results = 'hold', out.width='70%', fig.align = 'center', message = FALSE)
library(httr)
library(jsonlite)
library(dplyr)
options(encoding = "UTF-8")
req <- GET('https://www.dcard.tw/',
path = c("_api", "forums", "makeup", "posts"))
req[["status_code"]]
makeup_idx <- content(req)
# Your code goes here
first_id <- makeup_idx[[1]]$id
first_id
# 因為文章隨時會更新，所以結果不會一樣
# Should print out something like:
#> [1] 232518734
# Your code goes here
first_content <- makeup_idx[[1]]$excerpt
first_content
# Should print out something like:
#> [1] "對於愛看棒球的我，雖然無法到現場加油但心要同在～\n我愛韓國輸啦！！！\n趁著棒球魂上身來分享一下棒球加油妝\n \nBTW啦啦隊氣氛整個超嗨\n每個選手上場必唱特定應援曲+動作\n超想衝去前面跟啦啦隊一起跳-///-\n \n妝容如下\nhttps://i.imgur.com/IrH709F.jpg\nhttps://i.imgur.com/NGJ0vnV.jpg\n自備加油棒超有看棒球的感覺（握\n \n特別分享我最近好愛的紅唇GA唇萃#400💋💋💋\n是亞曼尼正紅，充滿活力又年輕的正紅色\n真的超美超級飽和的\n拿來畫紅唇和Logo(?!)完美❤❤❤\nhttps://i.imgur.com/pGu8Mgy.jpg\nhttps://i.imgur.com/oM0HlkN.jpg\n日常妝也可以駕馭的好看紅唇💋\n小女子口紅不嫌多啊❤\n簡單棒球加油妝分享到這邊\n雖然中華隊還是輸了\n不過你們超棒！！！以你們為榮\n \n有沒有人最近也燃燒棒球魂的～～"
if (!requireNamespace("remotes"))
install.packages("remotes")
remotes::install_github("shihjyun/PTTmineR")
library(PTTmineR)
install.packages("rtweet")
library(rtweet)
vignette("auth", package = "rtweet")
View(req)
## install remotes pkg if not already
if (!requireNamespace("remotes")) {
install.packages("remotes")
}
## install from github
remotes::install_github("mkearney/rreddit")
Use
require(quanteda)
require(quanteda.corpora)
require(lubridate)
require(topicmodels)
install.packages("topicmodels")
require(quanteda)
require(quanteda.corpora)
require(lubridate)
require(topicmodels)
library(topicmodels)
install.packages("quanteda")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("quanteda/quanteda.corpora")
read.csv("movies.csv")
read.csv("/Users/kaiyu/Downloads/movies.csv")
movies <- read.csv("/Users/kaiyu/Downloads/movies.csv")
View(movies)
library(readr)
library(readr)
library(dplyr)
library(ggplot2)
library(rpart)
library(statisticalModeling)
movie_million <- read_csv("AllMoviesDetailsCleaned_2.csv", col_names = T)
View(movie_million)
head(movie_million)
nrow(movie_million) # 65534
movies <- read_csv("movies.csv")
View(movies)
#movies_all <- read_csv("AllMoviesDetailsCleaned.csv")
#View(movies_all)
name_basic <- read.table("name.basics.tsv", stringsAsFactors = FALSE, header = TRUE, fill = TRUE, row.names = NULL)
View(name_basic)
summary(movies)
movies$budget <- movies$budget/1000000 # budget單位（百萬）
movies$gross <- movies$gross/1000000 # gross單位（百萬）
unique(movies$rating)
## 不同分級的電影，budget & score的關係
ggplot(filter(movies, rating %in% c("UNRATED", "NOT RATED"))) +
geom_point(aes(x = budget, y = score, color = rating))
ggplot(data = movies, mapping = aes(x = budget, y = score, color = rating)) +
geom_point()
ggplot(filter(movies, rating == "R")) +
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
ggplot(filter(movies, rating == "G")) +
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
ggplot(data = filter(movies, rating %in% c("G", "R", "PG", "PG-13")), mapping = aes(x = budget, y = score, color = rating)) +
geom_point(na.rm = TRUE) +
geom_smooth()
model_g <- lm(score ~budget,data = filter(movies, rating == "G")) # 顯著
summary(model_g)
ggplot(filter(movies, rating %in% c("PG", "PG-13")), mapping = aes(x = budget, y = score, color = rating)) +
geom_point(na.rm = TRUE) +
geom_smooth()
ggplot(filter(movies, rating %in% c("TV-PG", "TV-MA", "TV-14", "B", "B15"))) + # 資料只有各一
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
ggplot(filter(movies, rating == "NC-17")) +
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
model_score <- lm(score ~budget+rating+genre, data = movies)
summary(model_score)
model_scoCountry <- lm(score ~country, data = movies)
summary(model_scoCountry)
## 不同分級的電影，budget & gross 的關係
ggplot(data = movies, mapping = aes(x = budget, y = gross, color = rating)) +
geom_point()
## 不同類型的電影，budget & gross 的關係
unique(movies$genre)
ggplot(data = movies, mapping = aes(x = budget, y = gross, color = genre)) +
geom_point()
## 不同類型的電影，budget & score 的關係
ggplot(data = movies, mapping = aes(x = budget, y = score, color = genre)) +
geom_point()
model_gross <- lm(gross ~budget+rating+genre, data = movies)
summary(model_gross) # budget, Adventure, Animation, Comedy, Horror Significant
fmodel(model_gross, gross ~budget+rating)
model_gro <- lm(gross ~country, data = movies)
summary(model_gro) # New zealand, USA significant
fmodel(model_gro, gross~country)
## year
model_score <- lm(score ~year+runtime, data = movies)
summary(model_score) # significant
fmodel(model_score)
model_timeBudget <- lm(budget ~runtime, data = movies)
summary(model_timeBudget) # significant
fmodel(model_timeBudget)
install.packages("statisticalModeling")
install.packages("rpart")
install.packages("rpart")
install.packages("vignettes")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
devtools::install_github("dtkaplan/statisticalModeling")
devtools::install_github("dtkaplan/statisticalModeling")
devtools::install_github("dtkaplan/statisticalModeling")
R.version.string
R.version.string
devtools::install_github("dtkaplan/statisticalModeling")
library(devtools)
library("devtools")
install.packages("devtools")
Sys.getlocale()
system("defaults write org.R-project.R force.LANG ch_TW.UTF-8")
Sys.getlocale()
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
devtools::install_github("dtkaplan/statisticalModeling")
system("defaults write org.R-project.R force.LANG zh_TW.UTF-8")
Sys.getlocale()
system("defaults write org.R-project.R force.LANG zh_TW.UTF-8")
Sys.getlocale()
warnings()
devtools::install_github("dtkaplan/statisticalModeling")
library("statisticalModeling", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(readr)
library(dplyr)
library(ggplot2)
library(statisticalModeling)
movie_million <- read_csv("AllMoviesDetailsCleaned_2.csv", col_names = T)
View(movie_million)
head(movie_million)
nrow(movie_million) # 65534
movies <- read_csv("movies.csv")
View(movies)
#movies_all <- read_csv("AllMoviesDetailsCleaned.csv")
#View(movies_all)
name_basic <- read.table("name.basics.tsv", stringsAsFactors = FALSE, header = TRUE, fill = TRUE, row.names = NULL)
View(name_basic)
summary(movies)
movies$budget <- movies$budget/1000000 # budget單位（百萬）
movies$gross <- movies$gross/1000000 # gross單位（百萬）
unique(movies$rating)
## 不同分級的電影，budget & score的關係
ggplot(filter(movies, rating %in% c("UNRATED", "NOT RATED"))) +
geom_point(aes(x = budget, y = score, color = rating))
ggplot(data = movies, mapping = aes(x = budget, y = score, color = rating)) +
geom_point()
ggplot(filter(movies, rating == "R")) +
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
ggplot(filter(movies, rating == "G")) +
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
ggplot(data = filter(movies, rating %in% c("G", "R", "PG", "PG-13")), mapping = aes(x = budget, y = score, color = rating)) +
geom_point(na.rm = TRUE) +
geom_smooth()
model_g <- lm(score ~budget,data = filter(movies, rating == "G")) # 顯著
summary(model_g)
ggplot(filter(movies, rating %in% c("PG", "PG-13")), mapping = aes(x = budget, y = score, color = rating)) +
geom_point(na.rm = TRUE) +
geom_smooth()
ggplot(filter(movies, rating %in% c("TV-PG", "TV-MA", "TV-14", "B", "B15"))) + # 資料只有各一
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
ggplot(filter(movies, rating == "NC-17")) +
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
model_score <- lm(score ~budget+rating+genre, data = movies)
summary(model_score)
model_scoCountry <- lm(score ~country, data = movies)
summary(model_scoCountry)
## 不同分級的電影，budget & gross 的關係
ggplot(data = movies, mapping = aes(x = budget, y = gross, color = rating)) +
geom_point()
## 不同類型的電影，budget & gross 的關係
unique(movies$genre)
ggplot(data = movies, mapping = aes(x = budget, y = gross, color = genre)) +
geom_point()
## 不同類型的電影，budget & score 的關係
ggplot(data = movies, mapping = aes(x = budget, y = score, color = genre)) +
geom_point()
model_gross <- lm(gross ~budget+rating+genre, data = movies)
summary(model_gross) # budget, Adventure, Animation, Comedy, Horror Significant
fmodel(model_gross, gross ~budget+rating)
model_gro <- lm(gross ~country, data = movies)
summary(model_gro) # New zealand, USA significant
fmodel(model_gro, gross~country)
## year
model_score <- lm(score ~year+runtime, data = movies)
summary(model_score) # significant
fmodel(model_score)
model_timeBudget <- lm(budget ~runtime, data = movies)
summary(model_timeBudget) # significant
fmodel(model_timeBudget)
library(readr)
library(dplyr)
library(ggplot2)
library(statisticalModeling)
movies <- read_csv("movies.csv")
View(movies)
#movies_all <- read_csv("AllMoviesDetailsCleaned.csv")
#View(movies_all)
name_basic <- read.table("name.basics.tsv", stringsAsFactors = FALSE, header = TRUE, fill = TRUE, row.names = NULL)
View(name_basic)
summary(movies)
movies$budget <- movies$budget/1000000 # budget單位（百萬）
movies$gross <- movies$gross/1000000 # gross單位（百萬）
unique(movies$rating)
## 不同分級的電影，budget & score的關係
ggplot(filter(movies, rating %in% c("UNRATED", "NOT RATED"))) +
geom_point(aes(x = budget, y = score, color = rating))
ggplot(data = movies, mapping = aes(x = budget, y = score, color = rating)) +
geom_point()
ggplot(filter(movies, rating == "R")) +
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
ggplot(filter(movies, rating == "G")) +
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
ggplot(data = filter(movies, rating %in% c("G", "R", "PG", "PG-13")), mapping = aes(x = budget, y = score, color = rating)) +
geom_point(na.rm = TRUE) +
geom_smooth()
model_g <- lm(score ~budget,data = filter(movies, rating == "G")) # 顯著
summary(model_g)
ggplot(filter(movies, rating %in% c("PG", "PG-13")), mapping = aes(x = budget, y = score, color = rating)) +
geom_point(na.rm = TRUE) +
geom_smooth()
ggplot(filter(movies, rating %in% c("TV-PG", "TV-MA", "TV-14", "B", "B15"))) + # 資料只有各一
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
ggplot(filter(movies, rating == "NC-17")) +
geom_point(aes(x = budget, y = score, color = rating), na.rm = TRUE)
model_score <- lm(score ~budget+rating+genre, data = movies)
summary(model_score)
model_scoCountry <- lm(score ~country, data = movies)
summary(model_scoCountry)
## 不同分級的電影，budget & gross 的關係
ggplot(data = movies, mapping = aes(x = budget, y = gross, color = rating)) +
geom_point()
## 不同類型的電影，budget & gross 的關係
unique(movies$genre)
ggplot(data = movies, mapping = aes(x = budget, y = gross, color = genre)) +
geom_point()
## 不同類型的電影，budget & score 的關係
ggplot(data = movies, mapping = aes(x = budget, y = score, color = genre)) +
geom_point()
model_gross <- lm(gross ~budget+rating+genre, data = movies)
summary(model_gross) # budget, Adventure, Animation, Comedy, Horror Significant
fmodel(model_gross, gross ~budget+rating)
model_gro <- lm(gross ~country, data = movies)
summary(model_gro) # New zealand, USA significant
fmodel(model_gro, gross~country)
## year
model_score <- lm(score ~year+runtime, data = movies)
summary(model_score) # significant
fmodel(model_score)
model_timeBudget <- lm(budget ~runtime, data = movies)
summary(model_timeBudget) # significant
fmodel(model_timeBudget)
setwd("~/Documents/project-kevin19971113/src")
